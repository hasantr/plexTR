import re

####################################################################################################
def MetadataObjectForURL(url):

	title = 'deneme'
	return VideoClipObject(
		title = title
	)

####################################################################################################
def MediaObjectsForURL(url):

        try:
            x=int(url[-1:])
        except:
            x=0
        if x==3:
            return [
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='720',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='720'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='480',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='480'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='360',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='360'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='240',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='240'))]
                    )
                    
            ]





        elif x==3:

            return [
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='480',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='480'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='360',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='360'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='240',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='240'))]
                    )
                    
            ]


        elif x==2:
            return [
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='360',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='360'))]
                    ),
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='240',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='240'))]
                    )
                    
            ]
        else:
            return [
                    MediaObject(
                            video_codec = VideoCodec.H264,
                            audio_codec = AudioCodec.AAC,
                            video_resolution ='240',
                            container = 'mp4',
                            parts = [PartObject(key=Callback(PlayVideo, url = url, fmt='240'))]
                    )
                    
            ]		



####################################################################################################
def PlayVideo(url, fmt):

	liste=[]
	fixed=''
	gecis=0
	link=HTTP.Request(url).content
	host=re.compile("host=([^\&]+)").findall(link)
	uid=re.compile("uid=([^\&]+)").findall(link)
	vtag=re.compile("vtag=([^\&]+)").findall(link)
	flv = re.compile("no_flv=(.*?)&").findall(link)
	try:
		vkstream=host[0]+'u'+uid[0]+'/videos/' + vtag[0]
	except:
                raise Ex.MediaNotAvailable	

	url=vkstream+'.'+fmt+'.mp4'





	# page = HTTP.Request(url).content

	# The source of the page actually contains a link to the associated flv file. We can simply find
	# this by using a regular expression to find it. Then, we just redirect.
	#video_url = 'http://cs12959v4.vk.me/u1181955/videos/f19b15cf33.360.mp4'

	return Redirect(url)

